 
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  email String @unique
  password String
  isVerified Boolean? @default(false)
  subscription UserType @default(NORMALUSER)
  tournamentCount Int @default(0)
  profile UserGamingProfile? 
  tournaments Tournament[]
}
model UserGamingProfile {
  id String @id @default(uuid())
  email String @unique
  teamId String
  slots SlotList[]
  perviousTournaments Tournament[] //stores the history of the previous tournaments
  userId String @unique
  team Team @relation(fields: [teamId],references: [id])
  profile  User @relation(fields: [userId], references: [id])
}

model Tournament {
  id String @id @default(uuid())
  name String
  logo String
  orgName String
  game Game 

  slots Int
  unit Int
  slotsLeft Int
  status TournamentStatus
  visibility Visibility
  prizePool Int @default(0)
  registrationFee Int @default(0)
  prizePoolDisturbution PrizeDisturbution?
  userId String
  slotList SlotList[]
  teams Team[]
  startDate DateTime
  endDate DateTime
  gamingProfiles UserGamingProfile[] //stores the history of the enrolled players
  createdBy User @relation(fields: [userId],references: [id])
}

model SlotList{
  id String @id @default(uuid())
  number Int
  maxPlayers Int
  gameType Game
  tournamentId String
  tournament Tournament @relation(fields: [tournamentId],references: [id])
  ownerId String  
  owner UserGamingProfile @relation(fields: [ownerId], references: [id])
  team Team?

}
model Team {
  id String @id @default(uuid())
  name String
  logo String
  tournamentId String
  tournament  Tournament @relation(fields: [tournamentId], references: [id])
  slotId String @unique
  slot SlotList @relation(fields: [slotId], references: [id])
  players UserGamingProfile[]
}
model PrizeDisturbution {
  id String @id @default(uuid())
  tournament Tournament @relation(fields: [tournamentId],references: [id])
  tournamentId  String @unique
  ist Int
  second Int
  third Int
  forth Int?
  mvp Int
  pwmk Int?
}






enum UserType {
  NORMALUSER
  FREE
  PREMIUM
}

enum Game {
  BGMI
  VALORANT
}
enum TournamentStatus {
  UPCOMING
  ONGOING
  COMPLETED
}
enum Visibility {
  PUBLIC
  HIDDEN
}
 